"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addPlugin_1 = __importDefault(require("../addPlugin"));
const config_1 = __importDefault(require("../../../models/config"));
describe("addPlugin", () => {
    const config = config_1.default.createWithValues({
        plugins: ["hello", "world", "-disabled"],
    });
    test("should have correct state of dependencies", () => {
        const disabledDep = config.getPluginDependency("disabled");
        expect(disabledDep).toBeDefined();
        expect(disabledDep.getVersion()).toEqual("*");
        expect(disabledDep.isEnabled()).toBeFalsy();
    });
    test("should add the plugin to the list", () => {
        // @ts-expect-error ts-migrate(2554) FIXME: Expected 3 arguments, but got 2.
        const newConfig = (0, addPlugin_1.default)(config, "test");
        const testDep = newConfig.getPluginDependency("test");
        expect(testDep).toBeDefined();
        expect(testDep.getVersion()).toEqual("*");
        expect(testDep.isEnabled()).toBeTruthy();
        const disabledDep = newConfig.getPluginDependency("disabled");
        expect(disabledDep).toBeDefined();
        expect(disabledDep.getVersion()).toEqual("*");
        expect(disabledDep.isEnabled()).toBeFalsy();
    });
});

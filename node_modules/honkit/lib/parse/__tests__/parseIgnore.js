"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const book_1 = __importDefault(require("../../models/book"));
const mock_1 = __importDefault(require("../../fs/mock"));
const parseIgnore_1 = __importDefault(require("../parseIgnore"));
describe("parseIgnore", () => {
    const fs = (0, mock_1.default)({
        ".ignore": "test-1.js",
        ".gitignore": "test-2.js\ntest-3.js",
        ".bookignore": "!test-3.js",
        "test-1.js": "1",
        "test-2.js": "2",
        "test-3.js": "3",
    });
    function getBook() {
        const book = book_1.default.createForFS(fs);
        return (0, parseIgnore_1.default)(book);
    }
    test("should load rules from .ignore", () => {
        return getBook().then((book) => {
            expect(book.isFileIgnored("test-1.js")).toBeTruthy();
        });
    });
    test("should load rules from .gitignore", () => {
        return getBook().then((book) => {
            expect(book.isFileIgnored("test-2.js")).toBeTruthy();
        });
    });
    test("should load rules from .bookignore", () => {
        return getBook().then((book) => {
            expect(book.isFileIgnored("test-3.js")).toBeFalsy();
        });
    });
});
